---
title: "Suspended Sediment Data"
author: "Dave Bosworth"
date: today
date-format: long
format:
  html:
    code-fold: true
    code-tools: true
execute: 
  message: false
  warning: false
---

```{r}
# Load packages
library(tidyverse)
library(dataRetrieval)
library(sf)
library(khroma)
library(scales)
library(here)
library(conflicted)

# Declare package conflict preferences
conflicts_prefer(dplyr::filter())
```

```{r}
# Create data dictionary for plot labels
label_dict <- c(
  SSC = "SSC (mg/L)",
  Turbidity = "Turbidity (FNU)",
  Storm_cat = "Storm Category",
  YoloSac = "Sac + Yolo Flow (cfs)"
)
```


# Import and Prepare Data

```{r}
# Sacramento at Freeport USGS Station:
# Daily average suspended sediment concentration
df_sac_fp_ss <- read_waterdata_daily(
  monitoring_location_id = "USGS-11447650",
  parameter_code = "80154",
  statistic_id = "00003"
)

df_sac_fp_ss_c <- df_sac_fp_ss %>% 
  st_drop_geometry() %>% 
  select(Date = time, SSC = value)

# Instantaneous (15-min) turbidity data
df_sac_fp_turb <- readNWISuv(
  siteNumbers = "11447650", 
  parameterCd = "63680",
  tz = "Etc/GMT+8"
)

# Calculate daily averages for turbidity
df_sac_fp_turb_avg <- as_tibble(df_sac_fp_turb) %>% 
  mutate(Date = date(dateTime)) %>% 
  summarize(across(where(is.numeric), \(x) mean(x, na.rm = TRUE)), .by = Date) %>% 
  mutate(
    Turbidity = coalesce(
      X_MEDIAN.TS087..YSI.model.6136_63680_00000, 
      X_BGC.PROJECT...East.Fender._63680_00000
    ),
    .keep = "unused"
  )
```

# Visualize time series

## Suspended Sediment Concentration

```{r}
df_sac_fp_ss_c %>% 
  ggplot(aes(x = Date, y = SSC)) +
  geom_point() +
  scale_x_date(breaks = breaks_pretty(15)) +
  scale_y_continuous(labels = label_comma()) +
  theme_bw() + 
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Suspended Sediment Concentration",
    dictionary = label_dict
  )
```

## Turbidity

```{r}
df_sac_fp_turb_avg %>% 
  ggplot(aes(x = Date, y = Turbidity)) +
  geom_point() +
  scale_x_date(breaks = breaks_pretty(10)) +
  theme_bw() + 
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Turbidity",
    dictionary = label_dict
  )
```

# Correlation between SSC and Turbidity

```{r}
df_sac_fp_ss_turb <- df_sac_fp_ss_c %>% 
  full_join(df_sac_fp_turb_avg, by = join_by(Date)) %>% 
  drop_na(SSC, Turbidity)
```

```{r}
df_sac_fp_ss_turb %>% 
  ggplot(aes(x = SSC, y = Turbidity)) +
  geom_point(alpha = 0.5) +
  theme_bw() +
  geom_smooth(method = "lm", formula = y ~ x) +
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "SSC vs. Turbidity",
    dictionary = label_dict
  )
```

```{r}
lm_sac_fp_ss_turb <- lm(Turbidity ~ SSC, data = df_sac_fp_ss_turb)

summary(lm_sac_fp_ss_turb)
```

# First Flush Analysis

```{r}
# Bring in storm data set
load(here("StormData.RData"))

# Clean up Sacflow_wstorms data set
df_sac_fp_storm <- Sacflow_wstorms %>% 
  mutate(
    Storm_cat = case_when(
      FirstStorm == "First Storm" ~ "First Storm",
      YSStorm == "STORM" ~ "Storm, but not first",
      Month %in% c(1, 2 ,12) ~ "No Storm\nduring winter",
      .default = "No Storm\nnot during winter"
    ),
    Storm_cat = factor(
      Storm_cat, 
      levels = c(
        "First Storm",
        "Storm, but not first",
        "No Storm\nduring winter",
        "No Storm\nnot during winter"
      )
    )
  )
```

## Suspended Sediment

```{r}
# Combine storm data set with suspended sediment data
df_sac_fp_ss_storm <- df_sac_fp_ss_c %>% 
  left_join(df_sac_fp_storm, by = join_by(Date))
```

```{r}
df_sac_fp_ss_storm %>% 
  ggplot(aes(x = Storm_cat, y = SSC)) +
  geom_boxplot() +
  scale_y_continuous(labels = label_comma()) +
  theme_bw() +
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Suspended Sediment comparison between storm categories",
    dictionary = label_dict
  )

df_sac_fp_ss_storm %>% 
  ggplot(aes(x = Storm_cat, y = SSC)) +
  geom_violin(quantile.linetype = 1) +
  scale_y_continuous(labels = label_comma()) +
  theme_bw() +
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Suspended Sediment comparison between storm categories",
    dictionary = label_dict
  )
```

```{r}
df_sac_fp_ss_storm %>% 
  filter(YSStorm == "STORM") %>% 
  mutate(Storm_cat = fct_drop(Storm_cat)) %>% 
  ggplot(aes(x = YoloSac, y = SSC, color = Storm_cat)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", formula = y ~ x) +
  scale_color_highcontrast(name = "Storm Category") +
  scale_x_continuous(labels = label_comma()) +
  scale_y_continuous(labels = label_comma()) +
  theme_bw() +
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Sac + Yolo Flow vs. SSC",
    dictionary = label_dict
  )
```

## Turbidity

```{r}
# Combine storm data set with turbidity data
df_sac_fp_turb_storm <- df_sac_fp_turb_avg %>% 
  left_join(df_sac_fp_storm, by = join_by(Date)) %>% 
  drop_na(Storm_cat)
```

```{r}
df_sac_fp_turb_storm %>% 
  ggplot(aes(x = Storm_cat, y = Turbidity)) +
  geom_boxplot() +
  theme_bw() +
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Turbidity comparison between storm categories",
    dictionary = label_dict
  )

df_sac_fp_turb_storm %>% 
  ggplot(aes(x = Storm_cat, y = Turbidity)) +
  geom_violin(quantile.linetype = 1) +
  theme_bw() +
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Turbidity comparison between storm categories",
    dictionary = label_dict
  )
```

```{r}
df_sac_fp_turb_storm %>% 
  filter(YSStorm == "STORM") %>% 
  mutate(Storm_cat = fct_drop(Storm_cat)) %>% 
  ggplot(aes(x = YoloSac, y = Turbidity, color = Storm_cat)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", formula = y ~ x) +
  scale_color_highcontrast(name = "Storm Category") +
  scale_x_continuous(labels = label_comma()) +
  scale_y_continuous(labels = label_comma()) +
  theme_bw() +
  labs(
    title = "Sacramento River at Freeport",
    subtitle = "Sac + Yolo Flow vs. Turbidity",
    dictionary = label_dict
  )
```

